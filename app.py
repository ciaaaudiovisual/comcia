import streamlit as st
from auth import check_authentication, login
from database import init_local_db, sync_with_sheets
from dashboard import show_dashboard
from alunos import show_alunos
from acoes import show_lancamentos_page
from ordens import show_ordens as show_ordens_e_tarefas # Renomeado para evitar conflito
from relatorios import show_relatorios
from config import show_config

print("DEBUG: app.py - In√≠cio do script principal")
st.write("DEBUG: app.py - Iniciando o aplicativo...")

# Inicializa o banco de dados local na primeira execu√ß√£o
init_local_db()
print("DEBUG: app.py - init_local_db() chamado")
st.write("DEBUG: app.py - Banco de dados local inicializado.")

# Verifica autentica√ß√£o
if not check_authentication():
    print("DEBUG: app.py - Usu√°rio n√£o autenticado, exibindo tela de login.")
    st.stop() # Para a execu√ß√£o se n√£o autenticado

print(f"DEBUG: app.py - Usu√°rio autenticado: {st.session_state.username}, Role: {st.session_state.role}")
st.write(f"DEBUG: app.py - Bem-vindo, {st.session_state.username}!")

# Layout da barra lateral para navega√ß√£o
st.sidebar.title("Navega√ß√£o")

# Adicionar bot√£o de sincroniza√ß√£o na sidebar
if st.sidebar.button("üîÑ Sincronizar com Google Sheets"):
    print("DEBUG: app.py - Bot√£o Sincronizar clicado na sidebar")
    sync_with_sheets()
    st.rerun()

menu_options = {
    "Dashboard": show_dashboard,
    "Alunos": show_alunos,
    "Lan√ßamento de A√ß√µes": show_lancamentos_page,
    "Ordens e Tarefas": show_ordens_e_tarefas,
    "Relat√≥rios": show_relatorios,
}

# Adicionar Configura√ß√µes apenas para admin
if st.session_state.role == "admin":
    menu_options["Configura√ß√µes"] = show_config

# Sele√ß√£o de p√°gina na barra lateral
selected_page = st.sidebar.radio("Ir para:", list(menu_options.keys()))

# Exibir a p√°gina selecionada
print(f"DEBUG: app.py - P√°gina selecionada: {selected_page}")
menu_options[selected_page]()

print("DEBUG: app.py - Fim do script principal")
st.write("DEBUG: app.py - Aplicativo carregado completamente.")


